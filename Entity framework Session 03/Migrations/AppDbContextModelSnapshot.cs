// <auto-generated />
using System;
using Entity_framework_Session_03.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entity_framework_Session_03.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity_framework_Session_03.Models.Aircraft", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AL_Id")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AL_Id");

                    b.ToTable("Aircrafts");
                });

            modelBuilder.Entity("Entity_framework_Session_03.Models.Aircraft_Route", b =>
                {
                    b.Property<int>("Route_Id")
                        .HasColumnType("int");

                    b.Property<int>("AC_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Arrival")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Departure")
                        .HasColumnType("datetime2");

                    b.Property<int>("Num_Of_Pass")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Route_Id", "AC_Id");

                    b.HasIndex("AC_Id");

                    b.ToTable("Aircraft_Routes");
                });

            modelBuilder.Entity("Entity_framework_Session_03.Models.Airline", b =>
                {
                    b.Property<int>("AirLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AirLineId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cont_person")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AirLineId");

                    b.ToTable("Airlines");
                });

            modelBuilder.Entity("Entity_framework_Session_03.Models.Airline_Phone", b =>
                {
                    b.Property<int>("AL_Id")
                        .HasColumnType("int");

                    b.Property<string>("Phones")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AL_Id", "Phones");

                    b.ToTable("Airline_Phones");
                });

            modelBuilder.Entity("Entity_framework_Session_03.Models.Emp_Qualification", b =>
                {
                    b.Property<int>("Emp_Id")
                        .HasColumnType("int");

                    b.Property<string>("Qualifications")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Emp_Id", "Qualifications");

                    b.ToTable("Emp_Qualifications");
                });

            modelBuilder.Entity("Entity_framework_Session_03.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AL_Id")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BD_Day")
                        .HasColumnType("int");

                    b.Property<int>("BD_Month")
                        .HasColumnType("int");

                    b.Property<int>("BD_Year")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AL_Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Entity_framework_Session_03.Models.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Distance")
                        .HasColumnType("float");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("Entity_framework_Session_03.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<int>("AL_Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Amout")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactionId");

                    b.HasIndex("AL_Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Entity_framework_Session_03.Models.Aircraft", b =>
                {
                    b.HasOne("Entity_framework_Session_03.Models.Airline", "Airline")
                        .WithMany("Aircrafts")
                        .HasForeignKey("AL_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("Entity_framework_Session_03.Models.Crew", "Crew", b1 =>
                        {
                            b1.Property<int>("AircraftId")
                                .HasColumnType("int");

                            b1.Property<string>("Assistant")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Host1")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Host2")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Maj_pilot")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AircraftId");

                            b1.ToTable("Aircrafts");

                            b1.WithOwner()
                                .HasForeignKey("AircraftId");
                        });

                    b.Navigation("Airline");

                    b.Navigation("Crew")
                        .IsRequired();
                });

            modelBuilder.Entity("Entity_framework_Session_03.Models.Aircraft_Route", b =>
                {
                    b.HasOne("Entity_framework_Session_03.Models.Aircraft", "aircraft")
                        .WithMany("Air_Routes")
                        .HasForeignKey("AC_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entity_framework_Session_03.Models.Route", "route")
                        .WithMany("Routes_Aircraft")
                        .HasForeignKey("Route_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("aircraft");

                    b.Navigation("route");
                });

            modelBuilder.Entity("Entity_framework_Session_03.Models.Airline_Phone", b =>
                {
                    b.HasOne("Entity_framework_Session_03.Models.Airline", "Airline")
                        .WithMany("airline_Phones")
                        .HasForeignKey("AL_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airline");
                });

            modelBuilder.Entity("Entity_framework_Session_03.Models.Emp_Qualification", b =>
                {
                    b.HasOne("Entity_framework_Session_03.Models.Employee", "Employee")
                        .WithMany("EmpQualifications")
                        .HasForeignKey("Emp_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Entity_framework_Session_03.Models.Employee", b =>
                {
                    b.HasOne("Entity_framework_Session_03.Models.Airline", "Airline")
                        .WithMany("Employees")
                        .HasForeignKey("AL_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Airline");
                });

            modelBuilder.Entity("Entity_framework_Session_03.Models.Transaction", b =>
                {
                    b.HasOne("Entity_framework_Session_03.Models.Airline", "Airline")
                        .WithMany("Transactions")
                        .HasForeignKey("AL_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airline");
                });

            modelBuilder.Entity("Entity_framework_Session_03.Models.Aircraft", b =>
                {
                    b.Navigation("Air_Routes");
                });

            modelBuilder.Entity("Entity_framework_Session_03.Models.Airline", b =>
                {
                    b.Navigation("Aircrafts");

                    b.Navigation("Employees");

                    b.Navigation("Transactions");

                    b.Navigation("airline_Phones");
                });

            modelBuilder.Entity("Entity_framework_Session_03.Models.Employee", b =>
                {
                    b.Navigation("EmpQualifications");
                });

            modelBuilder.Entity("Entity_framework_Session_03.Models.Route", b =>
                {
                    b.Navigation("Routes_Aircraft");
                });
#pragma warning restore 612, 618
        }
    }
}
